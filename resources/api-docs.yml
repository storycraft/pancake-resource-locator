openapi: 3.0.0
info:
  title: Pancake Resource Locator
  description: |-
    This API provides account management, redirect management and auth system for using Pancake Resource Locator service.

    ## Authentication
    The API provides basic OAuth authentication system. To obtain access token and refresh token, use login api. You can also exchange to new tokens using oauth refresh api.

    ## API Response
    Every api call response as `application/json` with HTTP status code 200 when api call was successful without exceptions.

    Example response (prettified)
    ```json
    {
        status: 0,
        data: {
            ...
        }
    }
    ```

    The response always contains status key and optionally data key for addtional api response data. Status code 0 always means successful. See common API status codes below and categorized api status code for more detail. Different category api may uses same status value having different meanings.

    ### Common API status code
    * 0 = Success
    * -1 = Operation failed

    ## Useful link
    - [Github repository](https://github.com/storycraft/pancake-resource-locator)
  version: 0.1.0
  contact:
    email: storycraft@pancake.sh
  license:
    name: GPLv3
    url: https://opensource.org/licenses/gpl-3.0.html
servers:
  - url: http://localhost:8080/api
    description: Development api server
  - url: https://link.pancake.sh/api/v1
    description: Production api server
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
  schemas:
    apiStatusCode:
      type: integer
      description: API status code
    apiResponseVoid:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/apiStatusCode'
      required:
        - status
    accountCredential:
      type: object
      properties:
        access_token:
          type: string
          description: Access token
        refresh_token:
          type: string
          description: Refresh token
        expiresIn:
          type: integer
          description: Access token expire time
      required:
        - access_token
        - refresh_token
        - expiresIn
    redirectionInfo:
      type: object
      properties:
        id:
          type: integer
          description: Redirection id
        name:
          type: string
          description: Redirection name
        url:
          type: string
          description: Redirect URL
        createdAt:
          type: integer
          description: Redirection creation time
        updatedAt:
          type: integer
          description: Redirection last update time
        redirectionPage:
          type: boolean
          description: Flag to show redirection page or not
        userDisabled:
          type: boolean
          description: True if redirection is disabled by user
      required:
        - id
        - name
        - url
        - createdAt
        - updatedAt
        - redirectionPage
        - userDisabled
tags:
  - name: account
    description: |-
      Account management & auth API

      ## Status codes
      * 1 = Account already exists
      * 2 = Login failed
  - name: account > me
  - name: redirect
    description: |-
      Redirection API

      ## Status codes
      * 1 = Redirection not found
  - name: oauth
    description: |-
      OAuth API

      ## Status codes
paths:
  /account/me:
    get:
      tags:
        - account > me
      summary: Account Info
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful API call
          content:
            application/json:
              schema:
                  type: object
                  properties:
                    status:
                      $ref: '#/components/schemas/apiStatusCode'
                    data:
                      type: object
                      properties:
                        id:
                          type: integer
                          description: Account id
                        email:
                          type: string
                          description: Account email
                        createdAt:
                          type: integer
                          description: Account creation time
                        activatedAt:
                          type: integer
                          description: Account activation time
                        updatedAt:
                          type: integer
                          description: Account last update time
                        suspended:
                          type: boolean
                          description: True if account is valid and not suspended
                      required:
                        - id
                        - email
                        - createdAt
                        - updatedAt
                        - suspended
                  required:
                    - status
  /api/account/login:
    post:
      tags:
        - account
      summary: Account Login
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  description: Account email address
                password:
                  type: string
                  format: password
                  description: Account password
              required:
                - email
                - password
      responses:
        '200':
          description: Successful API call
          content:
            application/json:
              schema:
                  type: object
                  properties:
                    status:
                      $ref: '#/components/schemas/apiStatusCode'
                    data:
                      $ref: '#/components/schemas/accountCredential'
                  required:
                    - status
  /account/register:
    post:
      tags:
        - account
      summary: Account Registration
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  description: Account email address
                password:
                  type: string
                  format: password
                  description: Account password
              required:
                - email
                - password
      responses:
        '200':
          description: Successful API call
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiResponseVoid'
  /account/activate:
    post:
      tags:
        - account
      summary: Account Activation
      parameters:
        - name: code
          in: query
          required: true
          schema:
            type: string
          description: Account activation code sent with email
      responses:
        '200':
          description: Successful API call
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiResponseVoid'
  /redirect/:
    get:
      tags:
        - redirect
      summary: Redirection List
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful API call
          content:
            application/json:
              schema:
                  type: object
                  properties:
                    status:
                      $ref: '#/components/schemas/apiStatusCode'
                    data:
                      type: array
                      items:
                        $ref: '#/components/schemas/redirectionInfo'
                  required:
                    - status
    post:
      tags:
        - redirect
      summary: Create new redirection
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Redirection name
                url:
                  type: string
                  description: Redirection URL
                expire_at:
                  type: integer
                  description: Redirection expire time
                visit_limit:
                  type: integer
                  description: Redirection visit limit
                redirection_page:
                  type: boolean
                  description: Flag to show redirection page or not
              required:
                - name
                - url
                - redirection_page
      responses:
        '200':
          description: Successful API call
          content:
            application/json:
              schema:
                  type: object
                  properties:
                    status:
                      $ref: '#/components/schemas/apiStatusCode'
                    data:
                      type: integer
                      description: Created redirection id
                  required:
                    - status
  /redirect/{id}:
    get:
      tags:
        - redirect
      summary: Redirection Info
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: Id of redirection
      responses:
        '200':
          description: Successful API call
          content:
            application/json:
              schema:
                  type: object
                  properties:
                    status:
                      $ref: '#/components/schemas/apiStatusCode'
                    data:
                      $ref: '#/components/schemas/redirectionInfo'
                  required:
                    - status
    delete:
      tags:
        - redirect
      summary: Delete Redirection
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: Id of redirection
      responses:
        '200':
          description: Successful API call
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiResponseVoid'
  /redirect/named/{name}:
    get:
      tags:
        - redirect
      summary: Redirection Info By Name
      security:
        - bearerAuth: []
      parameters:
        - name: name
          in: path
          schema:
            type: string
          required: true
          description: Name of shorten URL
      responses:
        '200':
          description: Successful API call
          content:
            application/json:
              schema:
                  type: object
                  properties:
                    status:
                      $ref: '#/components/schemas/apiStatusCode'
                    data:
                      $ref: '#/components/schemas/redirectionInfo'
                  required:
                    - status
  /redirect/named/{name}/url:
    get:
      tags:
        - redirect
      summary: Redirection URL By Name
      security:
        - bearerAuth: []
      parameters:
        - name: name
          in: path
          schema:
            type: string
          required: true
          description: Name of shorten URL
      responses:
        '200':
          description: Successful API call
          content:
            application/json:
              schema:
                  type: object
                  properties:
                    status:
                      $ref: '#/components/schemas/apiStatusCode'
                    data:
                      type: string
                      description: URL of target redirection name
                  required:
                    - status
  /redirect/{id}/visits:
    get:
      tags:
        - redirect
      summary: Get Redirection Visit Count
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: Id of redirection
      responses:
        '200':
          description: Successful API call
          content:
            application/json:
              schema:
                  type: object
                  properties:
                    status:
                      $ref: '#/components/schemas/apiStatusCode'
                    data:
                      type: integer
                      description: Redirection visit count
                  required:
                    - status
  /redirect/{id}/settings:
    put:
      tags:
        - redirect
      summary: Set Redirection Settings
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                expire_at:
                  type: string
                  description: URL Expire time
                visit_limit:
                  type: string
                  description: URL visit limit
                redirection_page:
                  type: string
                  description: Flag to show URL redirection page
                user_disabled:
                  type: string
                  description: Flag to Disable URL
              required:
                - redirection_page
                - user_disabled
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: Id of redirection
      responses:
        '200':
          description: Successful API call
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiResponseVoid'
  /oauth/refresh:
    post:
      tags:
        - oauth
      summary: Exchange OAuth Token
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                refresh_token:
                  type: string
                  description: Refresh token
              required:
                - refresh_token
      responses:
        '200':
          description: Successful API call
          content:
            application/json:
              schema:
                  type: object
                  properties:
                    status:
                      $ref: '#/components/schemas/apiStatusCode'
                    data:
                      $ref: '#/components/schemas/accountCredential'
                  required:
                    - status
